local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "JailBroken X",
   LoadingTitle = "JailBroken X Loading..",
   LoadingSubtitle = "by c00lkidd and hax0",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "JailBroken X Key System",
      Subtitle = "Key System",
      Note = "Key Process: Get authentication from the owners and paste the key in",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"c00lkeyy", "hax0r"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab1 = Window:CreateTab("Main Scripts", 4483362458) -- Title, Image

local Section = Tab1:CreateSection("Main Section")

Rayfield:Notify({
   Title = "JailBroken X has loaded!",
   Content = "Have fun!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button1 = Tab1:CreateButton({
   Name = "Infinite Yield FE",
   Callback = function()
   Rayfield:Notify({
   
   Title = "Script Executed!",
   Content = "Infinite Yield FE has been successfully executed!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

local Toggle = Tab1:CreateToggle({
   Name = "Bypass LocalScripts Anti-Cheat",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local eventbypass

eventbypass = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if not checkcaller() and self.Name == "Anti_Cheat_Remote" and method == "FireServer" then
        print("Anti Cheat remote was called and blocked.")
        return wait(9e9); -- do nothing if called
    end

    return eventbypass(self, ...)
end)
   end,
})

Toggle:Set(false)

local Button2 = Tab1:CreateButton({
   Name = "OwlHub",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
   end,
})

local Button = Tab1:CreateButton({
   Name = "EclipseHub",
   Callback = function()
   getgenv().mainKey = "nil";

local a,b,c,d,e=loadstring,request or http_request or (http and http.request) or (syn and syn.request),assert,tostring,"https\58//api.eclipsehub.xyz/auth";c(a and b,"Executor not Supported")a(b({Url=e.."\?\107e\121\61"..d(mainKey),Headers={["User-Agent"]="Eclipse"}}).Body)()
   end,
})

local Input = Tab1:CreateInput({
   Name = "Input Print",
   PlaceholderText = "Hello World!",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
   -- The function that takes place when the input is changed
   -- The variable (Text) is a string for the value in the text box
   end,
})
